{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh.Reid\\\\github\\\\webdev\\\\src\\\\qrest.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n/* const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width : '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n\r\n    },\r\n    table :{\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\n*/\n\nexport default class QRest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rows: [],\n      classes: \"\" //useStyles()\n\n    };\n  }\n\n  componentDidMount() {\n    let config = {\n      headers: {\n        \"Accept\": \"*/*\",\n        \"Authorization\": \"Basic dXNlcjpwYXNz\"\n      }\n    };\n    const empty = {\n      \"query\": \"-5#select from trade\",\n      \"response\": \"true\",\n      \"type\": \"sync\"\n    };\n    axios.post(\"https://localhost:8090/executeQuery\", empty, config).then(res => {\n      const rows = res.data.result;\n      this.setState({\n        rows\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Paper, {\n      className: this.state.classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: this.state.classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"date\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"time\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"sym\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"price\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"size\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"stop\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"cond\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"ex\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.rows.map(row => React.createElement(TableRow, {\n      key: row.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, row.date), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, row.time), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, row.sym), \"                                \", React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, row.b), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, row.price), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, row.size), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, row.stop), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, row.cond), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, row.ex))))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Josh.Reid\\github\\webdev\\src\\qrest.js"],"names":["React","axios","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","QRest","Component","state","rows","classes","componentDidMount","config","headers","empty","post","then","res","data","result","setState","render","root","table","map","row","date","time","sym","b","price","size","stop","cond","ex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n/* const useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width : '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n\r\n    },\r\n    table :{\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\n*/\r\n\r\nexport default class QRest extends React.Component {\r\n    state = {\r\n        rows: [],\r\n        classes: \"\" //useStyles()\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        let config = {\r\n            headers: {\r\n                \"Accept\": \"*/*\",\r\n                \"Authorization\": \"Basic dXNlcjpwYXNz\"\r\n            }\r\n          }\r\n\r\n        const empty = {\r\n            \"query\": \"-5#select from trade\",\r\n            \"response\": \"true\",\r\n            \"type\": \"sync\"\r\n        };\r\n\r\n        axios.post(`https://localhost:8090/executeQuery`, empty, config)\r\n        .then(res => {\r\n            const rows = res.data.result;\r\n            this.setState({ rows });\r\n        })\r\n    }\r\n    render() {\r\n    \r\n        return (\r\n            <Paper className={this.state.classes.root}>\r\n                <Table className={this.state.classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>date</TableCell>\r\n                            <TableCell align=\"right\">time</TableCell>\r\n                            <TableCell align=\"right\">sym</TableCell>\r\n                            <TableCell align=\"right\">price</TableCell>\r\n                            <TableCell align=\"right\">size</TableCell>\r\n                            <TableCell align=\"right\">stop</TableCell>\r\n                            <TableCell align=\"right\">cond</TableCell>\r\n                            <TableCell align=\"right\">ex</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.rows.map(row => (\r\n                            <TableRow key={row.date}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.date}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.time}</TableCell>\r\n                                <TableCell align=\"right\">{row.sym}</TableCell>                                <TableCell align=\"right\">{row.b}</TableCell>\r\n                                <TableCell align=\"right\">{row.price}</TableCell>\r\n                                <TableCell align=\"right\">{row.size}</TableCell>\r\n                                <TableCell align=\"right\">{row.stop}</TableCell>\r\n                                <TableCell align=\"right\">{row.cond}</TableCell>                           \r\n                                <TableCell align=\"right\">{row.ex}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}