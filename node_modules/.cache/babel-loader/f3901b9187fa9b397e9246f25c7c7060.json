{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Josh.Reid\\\\github\\\\webdev\\\\src\\\\qrest.js\";\nimport React from 'react';\nimport axios from 'axios';\nexport default class QRest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: []\n    };\n  }\n\n  componentDidMount() {\n    let config = {\n      headers: {\n        \"Accept\": \"*/*\",\n        \"Authorization\": \"Basic dXNlcjpwYXNz\"\n      }\n    };\n    const empty = {\n      \"query\": \"select from t\",\n      \"response\": \"true\",\n      \"type\": \"sync\"\n    };\n    axios.post(\"https://localhost:8090/executeQuery\", empty, config).then(res => {\n      const persons = res.data.result;\n      this.setState({\n        persons\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.persons.map(person => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, person.b + person.a)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Josh.Reid\\github\\webdev\\src\\qrest.js"],"names":["React","axios","QRest","Component","state","persons","componentDidMount","config","headers","empty","post","then","res","data","result","setState","render","map","person","b","a"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CC,KAD+C,GACvC;AACJC,MAAAA,OAAO,EAAE;AADL,KADuC;AAAA;;AAK/CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG;AACTC,MAAAA,OAAO,EAAE;AACL,kBAAU,KADL;AAEL,yBAAiB;AAFZ;AADA,KAAb;AAOA,UAAMC,KAAK,GAAG;AACV,eAAS,eADC;AAEV,kBAAY,MAFF;AAGV,cAAQ;AAHE,KAAd;AAMAR,IAAAA,KAAK,CAACS,IAAN,wCAAkDD,KAAlD,EAAyDF,MAAzD,EACCI,IADD,CACMC,GAAG,IAAI;AACT,YAAMP,OAAO,GAAGO,GAAG,CAACC,IAAJ,CAASC,MAAzB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd;AACH,KAJD;AAKH;;AAEDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKZ,KAAL,CAAWC,OAAX,CAAmBY,GAAnB,CAAuBC,MAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAM,CAACC,CAAP,GAAWD,MAAM,CAACE,CAAvB,CAAjC,CADN,CADJ;AAKH;;AAhC8C","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default class QRest extends React.Component {\r\n    state = {\r\n        persons: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        let config = {\r\n            headers: {\r\n                \"Accept\": \"*/*\",\r\n                \"Authorization\": \"Basic dXNlcjpwYXNz\"\r\n            }\r\n          }\r\n\r\n        const empty = {\r\n            \"query\": \"select from t\",\r\n            \"response\": \"true\",\r\n            \"type\": \"sync\"\r\n        };\r\n\r\n        axios.post(`https://localhost:8090/executeQuery`, empty, config)\r\n        .then(res => {\r\n            const persons = res.data.result;\r\n            this.setState({ persons });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul>\r\n                { this.state.persons.map(person => <li>{person.b + person.a}</li>)}\r\n            </ul>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}